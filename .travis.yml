# travis
sudo: false
language: python
cache: pip

jobs:
  fast_finish: true
  include:
    - python: 3.6
      name: flake8
      env: TOXENV=flake8
      after_success:
        - echo "done"

    - language: generic
      python: 3.6
      name: docs
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py36 python=3.6 -y
      install:
        - source activate py36
        - conda config --add channels conda-forge
        - conda install -y --name py36 tox pandoc
        - pip freeze
        - pandoc -v
      before_script: echo "skip before_script"
      script: tox -e docs
      after_success: echo "skip after_success"

    - language: generic
      python: 3.6
      name: docs-links
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py36 python=3.6 -y
      install:
        - source activate py36
        - conda config --add channels conda-forge
        - conda install -y --name py36 tox pandoc
        - pip freeze
        - pandoc -v
      before_script: echo "skip before_script"
      script: tox -e docs-links
      after_success: echo "skip after_success"

    - language: python
      python: 3.6
      name: linux-py36

    - language: python
      sudo: required
      dist: xenial
      python: "3.7"
      name: linux-py37

    - python: 3.6
      name: flake8-nightly
      env: TOXENV=flake8-nightly

    - language: generic
      python: 3.6
      name: osx-py36
      os: osx
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda create -n py36 python=3.6 -y
      install:
        - source activate py36
        - conda config --add channels conda-forge
        - conda install -y --name py36 tox coveralls
        - pip freeze
      script: tox -e py36

    - language: generic
      python: 3.7
      name: osx-py37
      os: osx
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda create -n py37 python=3.7 -y
      install:
        - source activate py37
        - conda config --add channels conda-forge
        - conda install -y --name py37 tox coveralls
        - pip freeze
      script: tox -e py37

    - python: 3.6
      name: win-coverage
      install:
        - pip install git+https://github.com/Robpol86/appveyor-artifacts.git coveralls
      script:
        - appveyor-artifacts -m download

    - stage: deploy
      name: trigger binder build
      if: branch = master AND type != pull_request
      script:
        # Use Binder build API to trigger repo2docker to build image on GKE and OVH Binder Federation clusters
        - bash binder/trigger_binder.sh https://gke.mybinder.org/build/gh/s-weigand/flake8-nb/master
        - bash binder/trigger_binder.sh https://ovh.mybinder.org/build/gh/s-weigand/flake8-nb/master

    - stage: deploy
      name: PiPy-release
      if: type == push AND tag IS present
      install: echo "skip install"
      before_script: echo "skip before_script"
      script: echo "skip install"
      after_success: echo "skip after_success"
      deploy:
        provider: pypi
        distributions: sdist bdist_wheel
        user: s-weigand
        password:
          secure: I6VwUxVLsrOcFV8ubAK70+G03S3bGUqBN0TXYlkTctTmPZ6x4x1G7pHIj0B1HEZ348m+ZNCDpq6KI4MYe9O5SfdjE1XSyRhhqS+FjdVc2fPbZpw6I7fSyAOsFopRmpxLEh0z8JqQnRnw/XtDq3MRKsSBIcWQcRMF92QMYgsVrW0KCm21LYD+w4P7nAFce4Hgv93vd2Wl7OVWxxIHSL1YbSb0f03A9pRDZgpk1M3A4tjoREi3NUd5nRspvEjmjynPXtX0NBEf4521y9NgV+L0cDQZXx/CaOdr4sUcBPIqDXQn7Rd6Z2K8aSDmlcW2b1YExEozn4wVZMHdKgstGigp2USKEwTlDXiiFSCgL4XcSE3HFzqqCdD6G/OXIHq2gv/wkuOwgGdjtMq9+8m49ePslKKPMmGKlZhvFOZOcUInuCeh5mGQ43ImN1mgFyImnEvZk42tochXASobj5fhgyRKUna+hHsCsmse/4mBBprQMYKrRK6Z5L8yAb3brLPzCJv6bgzCOVqC8Aqy/PrgqfCmUz1DjJjmJQP+kI/hONYJ6avPRl6zD75UHWCeV8+sPcNGHQ+7j5+olazXZMdraUdT3f8Kg9fnEIbrJzkwB3/0ZXtDDZnai54//ZeR0aTlccvJuEBf7bJKLSSa4D7/gGvoVfB6dCxJcqjQ2QpWTDxUo0U=
        on:
          tags: true
          branch: master
          repo: s-weigand/flake8-nb

  allow_failures:
    #      this tests are allowed to fail since they rely external resources
    - name: docs-links
    - name: win-coverage

install:
  - python -m pip install -U pip>=8.1.2
  - pip install tox-travis coveralls

# delete old .coverage file
before_script: coverage erase

script: tox

after_success:
  - coveralls
  - coverage erase
