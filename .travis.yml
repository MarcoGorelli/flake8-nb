# travis
sudo: false
language: python
cache: pip

jobs:
  fast_finish: true
  include:
    - python: 3.6
      name: flake8
      env: TOXENV=flake8
      after_success:
        - echo "done"

    - python: 3.6
      name: docs
      env: TOXENV=docs
      after_success:
        - echo "done"

    - python: 3.6
      name: docs-links
      env: TOXENV=docs-links
      after_success:
        - echo "done"

    - language: python
      python: 3.6
      name: linux-py36

    - language: python
      sudo: required
      dist: xenial
      python: "3.7"
      name: linux-py37

    - language: generic
      python: 3.6
      name: osx-py36
      os: osx
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda create -n py36 python=3.6 -y
      install:
        - source activate py36
        - conda config --add channels conda-forge
        - conda install -y --name py36 tox coveralls
        - pip freeze
      script: tox -e py36

    - language: generic
      python: 3.7
      name: osx-py37
      os: osx
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda create -n py37 python=3.7 -y
      install:
        - source activate py37
        - conda config --add channels conda-forge
        - conda install -y --name py37 tox coveralls
        - pip freeze
      script: tox -e py37

    - python: 3.6
      name: win-coverage
      install:
        - pip install git+https://github.com/Robpol86/appveyor-artifacts.git coveralls
      script:
        - appveyor-artifacts -m download

    - stage: deploy
      name: trigger binder build
      if: branch = master AND type != pull_request
      script:
        # Use Binder build API to trigger repo2docker to build image on GKE and OVH Binder Federation clusters
        - bash binder/trigger_binder.sh https://gke.mybinder.org/build/gh/s-weigand/flake8-nb/master
        - bash binder/trigger_binder.sh https://ovh.mybinder.org/build/gh/s-weigand/flake8-nb/master

    - stage: deploy
      name: PiPy-release
      if: branch = master AND type == push AND tag IS present
      install: echo "skip install"
      before_script: echo "skip before_script"
      script: echo "skip install"
      after_success: echo "skip after_success"

  allow_failures:
    #      this tests are allowed to fail since they rely external resources
    - name: docs-links
    - name: win-coverage

install:
  - python -m pip install -U pip>=8.1.2
  - pip install tox-travis coveralls

# delete old .coverage file
before_script: coverage erase

script: tox

after_success:
  - coveralls
  - coverage erase

# Assuming you have installed the travis-ci CLI tool, after you
# create the Github repo and add it to Travis, run the
# following command to finish PyPI deployment setup:
# $ travis encrypt --add deploy.password
deploy:
  provider: pypi
  distributions: sdist bdist_wheel
  user: s-weigand
  password:
    secure: PLEASE_REPLACE_ME
  on:
    tags: true
    repo: s-weigand/flake8-nb
    condition: $TRAVIS_JOB_NAME =~ ^PiPy-release$
